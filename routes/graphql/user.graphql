type User implements Converser {
    id: ID!
    name: String! @method(name: "name")
    first_name: String!
    last_name: String!
    email: String!
    code: String!
    type: String! @method(name: "type")
    active: Boolean!
    shops(offset: Int, limit: Int): [Shop!] @field(resolver: "Ddondola\\Http\\GraphQL\\Resolvers\\UserResolver@shops")
    followers(offset: Int, limit: Int): [User!] @field(resolver: "Ddondola\\Http\\GraphQL\\Resolvers\\UserResolver@followers")
    followerCount: Int! @method(name: "followerCount")
    userFollowing(offset: Int, limit: Int): [User!] @field(resolver: "Ddondola\\Http\\GraphQL\\Resolvers\\UserResolver@userFollowing")
    userFollowingCount: Int! @method(name: "userFollowingCount")
    shopFollowing(offset: Int, limit: Int): [Shop!] @field(resolver: "Ddondola\\Http\\GraphQL\\Resolvers\\UserResolver@shopFollowing")
    shopFollowingCount: Int! @method(name: "shopFollowingCount")
    favouriteProducts(offset: Int, limit: Int): [Product!] @field(resolver: "Ddondola\\Http\\GraphQL\\Resolvers\\UserResolver@favouriteProducts")
    created_at: DateTime!
    updated_at: DateTime!
}