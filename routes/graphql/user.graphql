type User implements Converser {
    id: ID!
    name: String! @method(name: "name")
    first_name: String!
    last_name: String!
    email: String!
    code: String!
    type: String! @method(name: "type")
    active: Boolean!
    shops(offset: Int, limit: Int): [Shop!] @field(resolver: "Ddondola\\Http\\GraphQL\\Resolvers\\UserResolver@shops")
    following(offset: Int, limit: Int): [Shop!] @field(resolver: "Ddondola\\Http\\GraphQL\\Resolvers\\UserResolver@following")
    followingCount: Int!
    favouriteProducts(offset: Int, limit: Int): [Product!] @field(resolver: "Ddondola\\Http\\GraphQL\\Resolvers\\UserResolver@favouriteProducts")
    cart: Cart!
    created_at: DateTime!
    updated_at: DateTime!
}

extend type Query {

}

extend type Mutation {

}
