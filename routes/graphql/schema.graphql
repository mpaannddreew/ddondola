scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

scalar Date @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\Date")

type User {
    id: ID!
    name: String! @method(name: "name")
    first_name: String!
    last_name: String!
    email: String!
    cart: Cart @hasOne
    shops: [Shop!] @paginate(builder: "Shoppie\\Http\\GraphQL\\Queries\\ShoppieQuery@paginatedShops")
    profile: Profile!
    settings: Settings!
    active: Boolean!
    created_at: DateTime!
    updated_at: DateTime!
}

type Query {
    me: User! @auth
    users: [User!]! @paginate(type: "paginator" model: "Ddondola\\User")
    user(id: ID @eq): User @find(model: "Ddondola\\User")
}

type Mutation {
    createUser(
        first_name: String @rules(apply: ["required"])
        last_name: String @rules(apply: ["required"])
        email: String @rules(apply: ["required", "email", "unique:users,email"])
        password: String @bcrypt
    ): User @create(model: "Ddondola\\User")

    updateUser(
        id: ID @rules(apply: ["required"])
        first_name: String
        last_name: String
        email: String @rules(apply: ["email"])
    ): User @update(model: "Ddondola\\User")

}


#import shoppie.graphql